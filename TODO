
Please contact Luke Howard <lukeh@xedoc.com> if you can help. 

People with spare time and experience need only apply. :-)

There is a list for developers at <nss_ldap@gday.net.au>.

TESTING
=======

1. passwd: ok.

2. group: ok.

3. ethers: ok.

4. services: ok.

5. protocols: ok.

6. hosts: ok.

7. networks: ok.

8. bootparams: not done.

9. netgroup: not done.

10. aliases: not supported for solaris.

11. shadow: untested.

12. rpc: ok.

TODO:
=====

Resource assignments are suggested only.

- we should probably put the session, under Solaris, in the backend. 
  We need to do so in a way that remains compatible with the GNU NSS,
  where I expect we need to open a connection for every lookup.
  In nscd, where the backends are cached, it doesn't make sense to keep
  opening and closing sockets to the LDAP server, particularly as the
  rebinding logic was put there to *allow* the connection to be long
  lived.

- ditto for IRS: the private data should contain the session and be long
  lived. 

- we could clean up the text segment a bit by generating filters on the
  fly from object classes and attributes, instead of storing them. This
  seems to be important under Solaris as the linker doesn't intern strings (?)

- infinite recursion is host lookup -- libldap uses gethostbyname(). Perhaps
  we should link with a custom gethostbyname() which uses DNS only???

- use one LDAP connection and ldap_init() instead of opening multiple conns?

- support getgroupsbymember() in ldap-group.c. There's a skeleton in this
  closet :-) but no code written yet. It should be implemented as it's a lot
  faster to do (&(objectclass=posixGroup)(memberUid=lukeh)) than looking up every group.

- finish implementing dl-*.c  (LOW priority). In fact I'm tempted to remove
  this from the line up: SGI have their own LDAP C library support, and the
  OSF/1 implementation is done the wrong way (it should use SIA, not preloading)

- implement gethostbyname2()

- debug IPv6 support in ldap-hosts.c (and ldap-network.c?) (Uli?)

- debug irs-network.c 

- write ldap-netgrp.c and irs-netgrp.c (Uli, +Luke IRS)
  This is a lot easier now that the schema supports triples:

  squid> ldapsearch -L objectclass=nisnetgroup
  dn: cn=nightfly, o=Xedoc Software Development, c=AU
  cn: nightfly
  ttl: 86400
  objectclass: nisNetgroup
  objectclass: cacheObject
  objectclass: top
  membernisnetgroup: kamakiriad
  membernisnetgroup: ruby-baby
  nisnetgrouptriple: (lukeh,penguin,yp.xedoc.com.au)
  nisnetgrouptriple: (fagen,grep.next.com,yp.xedoc.com.au)

  You should be able to (a) rip out the flat file parser under Solaris -- the semantics
  are complicated, which is why I haven't done it (!), but basically you get a function
  pointer which will parse a flatfile entry into whatever struct and (b) use the glibc
  NIS code for the glibc part of the NSS. Or use (b) for both. It's up to you, but the
  netgroup structs will be different...

- support for bootparams map

- debug Netscape SDK support under Solaris (Leif???)

- write testsuite. Build under Linux & BSD/OS.

- Build PIC LDAP library for Linux. Maybe we want to make mods to libldap (to the
  extent of the Netscape modifications used by nss_ldap) and include that. eg.

	- thread safety (probably avoidable given global mutex)
	- not returning quasi-static data off the LDAP *ld eg. ldap_get_dn()
	- opaque LDAP struct (not too important)
	- roll liblber into libldap

  I've started this in the libldap work area. (Uli?)

- fix Makefiles to build under glibc. Makefile.sun, Makefile.gnu, Makefile.bsd
  + Configure.

- add support for DHCP and coldstart configuration


$Id$

